service: sls-api

custom:
  settings:
    POSTS_TABLE: posts

provider:
  name: aws
  runtime: nodejs12.x
  environment: ${ self:custom.settings }
  region: eu-west-2
  credentials:
      accessKeyId: AKIA53W7UGVDHJYXYNHJ
      secretAccessKey: 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
  # iamRoleStatements:
  #   - Effect: "Allow"
      Action:
      - dynamodb:DescribeTable
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
  Resources:
      - "arn:aws:dynamodb:${self:provider.region }:*:table/${self:custom.settings.POSTS_TABLE}"

functions:
  createPost: 
    handler: handler.createPost
    events:
    - http:
        path: /post
        method: post

    getAllPosts: 
    handler: handler.getAllPosts
    events:
    - http:
        path: /posts
        method: get

        getPosts: 
    handler: handler.getPosts
    events:
    - http:
        path: /posts/{number}
        method: get

getPost : 
    handler: handler.getPost
    events:
    - http:
        path: /posts/{id}
        method: get
       
updatePost: 
    handler: handler.updatePost
    events:
    - http:
        path: /post/{id}
        method: put


deletePost: 
    handler: handler.deletePost
    events:
    - http:
        path: /post/{id}
        method: delete


    resources:
      Resources:
      PostsTable:
        Type: AWS::DynamoDB::Table
      properties:
        AttributeDefinitions:
         -AttibuteName: "id"
           AttributeType: "S"
        KeySchema:
      - AttributeName: "id"
         KeyType: "HASH"
         ProvisionedThroughtput:
      ReadCapacityUnits: 1
      WriteCapacityUnits: 1
      TableName: ${ self:custom.settings.POSTS_TABLE }
